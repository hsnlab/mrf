#+INCLUDE: header.org

* Setup
- UDP traffic:
  - 108 bytes
  - dst port varies
- traffic gen: T-REX, 4mpps to overload SUT
- NIC hashes on UDP dst ports: ~ethtool --config-nfc enp7s0 rx-flow-hash udp4 n~

* Results

** 997 rules, 997 flows, multiple cpus, DEBUG off
#+TBLNAME:plot-997rules-997flows
| core | rate mtf [mbps] | rate default [mbps] | lin | delta_mtf | delta_default |  prop_mtf | prop_default |
|------+-----------------+---------------------+-----+-----------+---------------+-----------+--------------|
|    8 |            1070 |                 378 | 320 |     1.088 |         1.005 | 28.918919 |         9.45 |
|    7 |             860 |                 329 | 280 |      1.04 |         0.992 | 23.243243 |        8.225 |
|    6 |             706 |                 284 | 240 |      1.06 |         1.002 | 19.081081 |          7.1 |
|    5 |             555 |                 236 | 200 |      1.03 |         0.998 |        15 |          5.9 |
|    4 |             430 |                 189 | 160 |       1.2 |         0.998 | 11.621622 |        4.725 |
|    3 |             271 |                 142 | 120 |      1.26 |         0.996 | 7.3243243 |         3.55 |
|    2 |             143 |                  95 |  80 |      1.93 |         0.989 | 3.8648649 |        2.375 |
|    1 |              37 |                  48 |  40 |         1 |             1 |         1 |          1.2 |
#+TBLFM: $7=$2/37::$8=$3/40

#+begin_src gnuplot :var data=plot-997rules-997flows :exports results :file plot-997rules-997flows.png
  reset
  set size 1,1
  set xrange [1:9]
  set xlabel "cores"
  set title "997 rules and 997 flows"
  amdahl(x) = 55.6 / (.004 + ((1-0.004)/(x**1.45)))
  plot data u 1:2 w lp lw 2 title 'rate MRF', \
       data u 1:3 w lp lw 2 title 'rate DEF', \
       data u 1:4 w lp lw 2 title 'rate lin', \
       amdahl(x) w line lw 2 title 'amdahl'
#+end_src

#+RESULTS:
[[file:plot-997rules-997flows.png]]

$$Delta_i=\frac{rate_i}{\frac{i}{i-1}rate_{i-1}}$$

#+begin_src gnuplot :var data=plot-997rules-997flows :exports results :file plot-997rules-997flows-delta.png
  reset
  set size 1,1
  set xrange [0:9]
  set xlabel "cores"
  set title "997 rules and 997 flows"
  plot data u 1:5 w lp lw 2 title 'delta MRF', \
       data u 1:6 w lp lw 2 title 'delta DEF'
#+end_src

#+RESULTS:
[[file:plot-997rules-997flows-delta.png]]


# $$prop_i=\frac{rate_i}{rate_1}$$

# #+begin_src gnuplot :var data=plot-997rules-997flows :exports results :file plot-997rules-997flows-prop.png
#   reset
#   set size 1,1
#   set xrange [0:9]
#   set xlabel "cores"
#   set title "997 rules and 997 flows"
#   plot data u 1:7 w lp lw 2 title 'prop MRF', \
#        data u 1:8 w lp lw 2 title 'prop DEF'
# #+end_src

#+begin_src python :var data=plot-997rules-997flows :results output
  import numpy as np
  import matplotlib.pyplot as plt
  from scipy.optimize import curve_fit
  import pandas as pd

  def SuperLinearAmdahl(x, *params):
    return params[2] / (params[0] + (1-params[0])/pow(x, params[1]))

  D = pd.DataFrame(data)
  parameters, covariance = curve_fit(SuperLinearAmdahl, D[0].to_numpy(), D[1].to_numpy(), [0.5,1,1])
  print(parameters)
  print(covariance)
#+end_src

#+RESULTS:
: [4.24563454e-03 1.45799419e+00 5.51644893e+01]
: [[ 7.02823503e-05  1.26375935e-03 -6.66332839e-02]
:  [ 1.26375935e-03  2.51716367e-02 -1.43400321e+00]
:  [-6.66332839e-02 -1.43400321e+00  8.62565073e+01]]



* TODOs
paper todos:
- setup TIPSY
  - use classbench integration
- load-balancer? (depends on classbench)
- prepare two kernels:
  - debug: lock tracing, SAL_DEBUG, etc.
  - performance: current kernel
- evaluation
  - realistic traffic:
    - classbench flows
  - artificial traffic:
    - diff configs:
      - #nft rules,
      - #flows,
      - #controlled flows -> rule duplication
    - 1 cpu multiple queues?
